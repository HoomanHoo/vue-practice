<template>
  <div>
    <button @click="loadPerformance()">정보가져오기</button><br />
    {{ data }}

    <div>
      아이디:<input type="text" id="id" /><br />
      이름:<input type="text" id="name" /><br />
      비밀번호:<input type="password" id="passwd" /><br />
      나이:<input type="text" id="age" /><br />
      기타 정보:<input type="text" id="ref_val1" /><br />
      <button @click="createInfo()">정보 저장하기</button>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue'
const data = ref('') //화면에 렌더링할 변수를 초기화 한다
async function loadPerformance() {
  const res = await fetch('http://localhost:3000/api/performance/list') //moleculer에 설정한 URL에서 비동기 통신으로 데이터를 요청한다
  const jsonData = await res.json()
  data.value = jsonData //요청한 데이터를 받아온 뒤 JSON을 파싱해서 렌더링할 변수에 담는다
}

async function createInfo() {
  let body = {
    //DB에 Insert할 데이터를 JSON 형식 Object로 구성한다
    id: document.querySelector('#id').value,
    name: document.querySelector('#name').value,
    passwd: document.querySelector('#passwd').value,
    age: document.querySelector('#age').value,
    ref_val1: document.querySelector('#ref_val1').value
  }

  const res = await fetch('http://localhost:3000/api/performance/create', {
    method: 'POST', //통신 방식은 POST 방식으로 진행한다
    headers: {
      'Content-Type': 'application/json; charset=utf-8', //JSON 타입의 데이터를 HTTP Request Body에 담아 전송할 것이기 때문에 Content-Type Header를 JSON으로 설정한다
      body: JSON.stringify(body) //JSON 형식 Object를 JSON으로 만들어 Body에 담는다
    }
  })
  const jsonData = await res.json()
  data.value = jsonData //Return된 값을 화면에 렌더링할 변수에 담는다
}
</script>

<style lang="scss" scoped></style>
